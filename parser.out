Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    CONTRACT
    DO
    EMIT
    END
    EVENT
    EXTERNAL
    INTERNAL
    OSERROR
    PRINT
    PRIVATE
    PUBLIC
    RETURN
    RETURNS
    SEMICOLON
    THEN
    TYPE_SPECIFIER
    VAR
    VISIBILITY
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement statements
Rule 3     statements -> empty
Rule 4     statement -> declaration
Rule 5     statement -> assignment
Rule 6     statement -> abstract_call
Rule 7     statement -> abstract_function_declaration
Rule 8     statement -> print_statement
Rule 9     statement -> conditionals
Rule 10    statement -> attempt_findout_block
Rule 11    declaration -> mutex type IDENTIFIER EQUAL expression LINEEND
Rule 12    declaration -> mutex type IDENTIFIER LINEEND
Rule 13    assignment -> IDENTIFIER EQUAL expression LINEEND
Rule 14    abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
Rule 15    abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 16    print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
Rule 17    print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
Rule 18    print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
Rule 19    print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
Rule 20    conditionals -> if_statement
Rule 21    conditionals -> for_statement
Rule 22    conditionals -> aslongas_statement
Rule 23    if_statement -> IF expression LBRACE statements RBRACE
Rule 24    if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 25    if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
Rule 26    if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 27    for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
Rule 28    for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE
Rule 29    iterables -> STRING_LITERAL
Rule 30    iterables -> IDENTIFIER
Rule 31    aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> expression PLUS expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression TIMES expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> expression POWER expression
Rule 38    expression -> expression NOTEQUAL expression
Rule 39    expression -> expression LESSTHAN expression
Rule 40    expression -> expression GREATERTHAN expression
Rule 41    expression -> expression LESSTHANOREQUAL expression
Rule 42    expression -> expression GREATERTHANOREQUAL expression
Rule 43    expression -> expression EQUIVALENT expression
Rule 44    expression -> expression BITWISEAND expression
Rule 45    expression -> expression BITWISEOR expression
Rule 46    expression -> expression BITWISEXOR expression
Rule 47    expression -> expression SHIFTLEFT expression
Rule 48    expression -> expression SHIFTRIGHT expression
Rule 49    expression -> NOT expression
Rule 50    expression -> PLUS expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> BITWISEINVERT expression
Rule 53    expression -> INTEGER
Rule 54    expression -> FLOAT
Rule 55    expression -> IDENTIFIER
Rule 56    expression -> BOOLEAN
Rule 57    expression -> STRING_LITERAL
Rule 58    attempt_findout_block -> attempt_block findout_block
Rule 59    attempt_block -> ATTEMPT LBRACE statements RBRACE
Rule 60    findout_block -> FINDOUT error_type LBRACE statements RBRACE
Rule 61    error_type -> UNBOUNDLOCALERROR
Rule 62    error_type -> TYPEERROR
Rule 63    error_type -> VALUEERROR
Rule 64    error_type -> INDEXERROR
Rule 65    error_type -> KEYERROR
Rule 66    error_type -> EXCEPTION
Rule 67    error_type -> SYNTAXERROR
Rule 68    error_type -> STOPITERATION
Rule 69    error_type -> ARITHMETICERROR
Rule 70    error_type -> FLOATINGPOINTERROR
Rule 71    error_type -> OVERFLOWERROR
Rule 72    error_type -> ZERODIVISIONERROR
Rule 73    error_type -> ASSERTIONERROR
Rule 74    error_type -> ATTRIBUTEERROR
Rule 75    error_type -> BUFFERERROR
Rule 76    error_type -> EOFERROR
Rule 77    error_type -> IMPORTERROR
Rule 78    error_type -> MODULENOTFOUNERROR
Rule 79    error_type -> LOOKUPERROR
Rule 80    error_type -> MEMORYERROR
Rule 81    error_type -> NAMEERROR
Rule 82    error_type -> BLOCKINGIOERROR
Rule 83    error_type -> CHILDPROCESSERROR
Rule 84    error_type -> CONNECTIONERROR
Rule 85    error_type -> BROKENPIPEERROR
Rule 86    error_type -> CONNECTIONABORTEDERROR
Rule 87    error_type -> CONNECTIONREFUSEDERROR
Rule 88    error_type -> CONNECTIONRESETERROR
Rule 89    error_type -> FILEEXISTERROR
Rule 90    error_type -> FILENOTFOUNERROR
Rule 91    error_type -> INTERRUPTEDERROR
Rule 92    error_type -> ISADIRECTORYERROR
Rule 93    error_type -> NOTADIRECTORYERROR
Rule 94    error_type -> PERMISSIONERROR
Rule 95    error_type -> PROCESSLOOKUPERROR
Rule 96    error_type -> TIMEOUTERROR
Rule 97    error_type -> REFERENCEERROR
Rule 98    error_type -> RUNTIMEERROR
Rule 99    error_type -> INDENTATIONERROR
Rule 100   error_type -> TABERROR
Rule 101   error_type -> SYSTEMERROR
Rule 102   error_type -> UNICODEERROR
Rule 103   error_type -> UNICODEENCODEERROR
Rule 104   error_type -> UNICODEDECODEERROR
Rule 105   error_type -> UNICODETRANSLATEERROR
Rule 106   error_type -> WARNING
Rule 107   error_type -> USERWARNING
Rule 108   error_type -> DEPRECATIONWARNING
Rule 109   error_type -> PENDINGDEPRECATIONWARNING
Rule 110   error_type -> SYNTAXWARNING
Rule 111   error_type -> RUNTIMEWARNING
Rule 112   error_type -> FUTUREWARNING
Rule 113   error_type -> IMPORTWARNING
Rule 114   error_type -> UNICODEWARNING
Rule 115   error_type -> BYTESWARNING
Rule 116   error_type -> RESOURCEWARNING
Rule 117   error_type -> KEYBOARDINTERRUPT
Rule 118   parameter -> type IDENTIFIER
Rule 119   parameters -> parameter COMMA parameters
Rule 120   parameters -> parameter
Rule 121   parameters -> empty
Rule 122   arguments -> argument COMMA arguments
Rule 123   arguments -> argument
Rule 124   arguments -> empty
Rule 125   argument -> IDENTIFIER
Rule 126   argument -> expression
Rule 127   mutex -> UNLOCK
Rule 128   mutex -> LOCK
Rule 129   type -> INT_TYPE
Rule 130   type -> FLOAT_TYPE
Rule 131   type -> BOOL_TYPE
Rule 132   type -> STRING_TYPE
Rule 133   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 15
ARITHMETICERROR      : 69
ASLONGAS             : 31
ASSERTIONERROR       : 73
ATTEMPT              : 59
ATTRIBUTEERROR       : 74
BITWISEAND           : 44
BITWISEINVERT        : 52
BITWISEOR            : 45
BITWISEXOR           : 46
BLOCKINGIOERROR      : 82
BOOLEAN              : 56
BOOL_TYPE            : 131
BROKENPIPEERROR      : 85
BUFFERERROR          : 75
BYTESWARNING         : 115
CHILDPROCESSERROR    : 83
COLON                : 
COMMA                : 18 19 119 122
CONNECTIONABORTEDERROR : 86
CONNECTIONERROR      : 84
CONNECTIONREFUSEDERROR : 87
CONNECTIONRESETERROR : 88
CONTRACT             : 
DEPRECATIONWARNING   : 108
DIVIDE               : 36
DO                   : 
ELIF                 : 25 26
ELSE                 : 24 26
EMIT                 : 
END                  : 
EOFERROR             : 76
EQUAL                : 11 13
EQUIVALENT           : 43
EVENT                : 
EXCEPTION            : 66
EXTERNAL             : 
FILEEXISTERROR       : 89
FILENOTFOUNERROR     : 90
FINDOUT              : 60
FLOAT                : 54
FLOATINGPOINTERROR   : 70
FLOAT_TYPE           : 130
FOR                  : 27 28
FUNCTIONID           : 14 15
FUTUREWARNING        : 112
GREATERTHAN          : 40
GREATERTHANOREQUAL   : 42
HAIL                 : 14
IDENTIFIER           : 11 12 13 17 18 18 19 27 28 30 55 118 125
IF                   : 23 24 25 26
IMPORTERROR          : 77
IMPORTWARNING        : 113
IN                   : 27 28
INDENTATIONERROR     : 99
INDEXERROR           : 64
INTEGER              : 53
INTERNAL             : 
INTERRUPTEDERROR     : 91
INT_TYPE             : 129
ISADIRECTORYERROR    : 92
KEYBOARDINTERRUPT    : 117
KEYERROR             : 65
LBRACE               : 15 23 24 24 25 25 26 26 26 27 28 31 59 60
LESSTHAN             : 39
LESSTHANOREQUAL      : 41
LINEEND              : 11 12 13 14 16 17 18 19
LOCK                 : 128
LOOKUPERROR          : 79
LPAREN               : 14 15 16 17 18 19 27 32
MEMORYERROR          : 80
MINUS                : 34 51
MODULENOTFOUNERROR   : 78
NAMEERROR            : 81
NOT                  : 49
NOTADIRECTORYERROR   : 93
NOTEQUAL             : 38
OSERROR              : 
OVERFLOWERROR        : 71
PENDINGDEPRECATIONWARNING : 109
PERMISSIONERROR      : 94
PLUS                 : 33 50
POWER                : 37
PRINT                : 
PRIVATE              : 
PROCESSLOOKUPERROR   : 95
PUBLIC               : 
RANGE                : 27
RBRACE               : 15 23 24 24 25 25 26 26 26 27 28 31 59 60
REFERENCEERROR       : 97
RESOURCEWARNING      : 116
RETURN               : 
RETURNS              : 
RPAREN               : 14 15 16 17 18 19 27 32
RUNTIMEERROR         : 98
RUNTIMEWARNING       : 111
SCRIBE               : 16 17 18 19
SEMICOLON            : 
SHIFTLEFT            : 47
SHIFTRIGHT           : 48
STOPITERATION        : 68
STRING_LITERAL       : 16 19 29 57
STRING_TYPE          : 132
SYNTAXERROR          : 67
SYNTAXWARNING        : 110
SYSTEMERROR          : 101
TABERROR             : 100
THEN                 : 
TIMEOUTERROR         : 96
TIMES                : 35
TYPEERROR            : 62
TYPE_SPECIFIER       : 
UNBOUNDLOCALERROR    : 61
UNICODEDECODEERROR   : 104
UNICODEENCODEERROR   : 103
UNICODEERROR         : 102
UNICODETRANSLATEERROR : 105
UNICODEWARNING       : 114
UNLOCK               : 127
USERWARNING          : 107
VALUEERROR           : 63
VAR                  : 
VISIBILITY           : 
WARNING              : 106
WHILE                : 
ZERODIVISIONERROR    : 72
error                : 

Nonterminals, with rules where they appear

abstract_call        : 6
abstract_function_declaration : 7
argument             : 122 123
arguments            : 14 27 122
aslongas_statement   : 22
assignment           : 5
attempt_block        : 58
attempt_findout_block : 10
conditionals         : 9
declaration          : 4
empty                : 3 121 124
error_type           : 60
expression           : 11 13 23 24 25 25 26 26 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 50 51 52 126
findout_block        : 58
for_statement        : 21
if_statement         : 20
iterables            : 28
mutex                : 11 12
parameter            : 119 120
parameters           : 15 119
print_statement      : 8
program              : 0
statement            : 2
statements           : 1 2 15 23 24 24 25 25 26 26 26 27 28 31 59 60
type                 : 11 12 118

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    $end            reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement . statements
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    $end            reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statement                      shift and go to state 3
    statements                     shift and go to state 27
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 4

    (3) statements -> empty .

    $end            reduce using rule 3 (statements -> empty .)
    RBRACE          reduce using rule 3 (statements -> empty .)


state 5

    (4) statement -> declaration .

    IDENTIFIER      reduce using rule 4 (statement -> declaration .)
    HAIL            reduce using rule 4 (statement -> declaration .)
    ABSTRACT        reduce using rule 4 (statement -> declaration .)
    SCRIBE          reduce using rule 4 (statement -> declaration .)
    UNLOCK          reduce using rule 4 (statement -> declaration .)
    LOCK            reduce using rule 4 (statement -> declaration .)
    IF              reduce using rule 4 (statement -> declaration .)
    FOR             reduce using rule 4 (statement -> declaration .)
    ASLONGAS        reduce using rule 4 (statement -> declaration .)
    ATTEMPT         reduce using rule 4 (statement -> declaration .)
    $end            reduce using rule 4 (statement -> declaration .)
    RBRACE          reduce using rule 4 (statement -> declaration .)


state 6

    (5) statement -> assignment .

    IDENTIFIER      reduce using rule 5 (statement -> assignment .)
    HAIL            reduce using rule 5 (statement -> assignment .)
    ABSTRACT        reduce using rule 5 (statement -> assignment .)
    SCRIBE          reduce using rule 5 (statement -> assignment .)
    UNLOCK          reduce using rule 5 (statement -> assignment .)
    LOCK            reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    FOR             reduce using rule 5 (statement -> assignment .)
    ASLONGAS        reduce using rule 5 (statement -> assignment .)
    ATTEMPT         reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RBRACE          reduce using rule 5 (statement -> assignment .)


state 7

    (6) statement -> abstract_call .

    IDENTIFIER      reduce using rule 6 (statement -> abstract_call .)
    HAIL            reduce using rule 6 (statement -> abstract_call .)
    ABSTRACT        reduce using rule 6 (statement -> abstract_call .)
    SCRIBE          reduce using rule 6 (statement -> abstract_call .)
    UNLOCK          reduce using rule 6 (statement -> abstract_call .)
    LOCK            reduce using rule 6 (statement -> abstract_call .)
    IF              reduce using rule 6 (statement -> abstract_call .)
    FOR             reduce using rule 6 (statement -> abstract_call .)
    ASLONGAS        reduce using rule 6 (statement -> abstract_call .)
    ATTEMPT         reduce using rule 6 (statement -> abstract_call .)
    $end            reduce using rule 6 (statement -> abstract_call .)
    RBRACE          reduce using rule 6 (statement -> abstract_call .)


state 8

    (7) statement -> abstract_function_declaration .

    IDENTIFIER      reduce using rule 7 (statement -> abstract_function_declaration .)
    HAIL            reduce using rule 7 (statement -> abstract_function_declaration .)
    ABSTRACT        reduce using rule 7 (statement -> abstract_function_declaration .)
    SCRIBE          reduce using rule 7 (statement -> abstract_function_declaration .)
    UNLOCK          reduce using rule 7 (statement -> abstract_function_declaration .)
    LOCK            reduce using rule 7 (statement -> abstract_function_declaration .)
    IF              reduce using rule 7 (statement -> abstract_function_declaration .)
    FOR             reduce using rule 7 (statement -> abstract_function_declaration .)
    ASLONGAS        reduce using rule 7 (statement -> abstract_function_declaration .)
    ATTEMPT         reduce using rule 7 (statement -> abstract_function_declaration .)
    $end            reduce using rule 7 (statement -> abstract_function_declaration .)
    RBRACE          reduce using rule 7 (statement -> abstract_function_declaration .)


state 9

    (8) statement -> print_statement .

    IDENTIFIER      reduce using rule 8 (statement -> print_statement .)
    HAIL            reduce using rule 8 (statement -> print_statement .)
    ABSTRACT        reduce using rule 8 (statement -> print_statement .)
    SCRIBE          reduce using rule 8 (statement -> print_statement .)
    UNLOCK          reduce using rule 8 (statement -> print_statement .)
    LOCK            reduce using rule 8 (statement -> print_statement .)
    IF              reduce using rule 8 (statement -> print_statement .)
    FOR             reduce using rule 8 (statement -> print_statement .)
    ASLONGAS        reduce using rule 8 (statement -> print_statement .)
    ATTEMPT         reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    RBRACE          reduce using rule 8 (statement -> print_statement .)


state 10

    (9) statement -> conditionals .

    IDENTIFIER      reduce using rule 9 (statement -> conditionals .)
    HAIL            reduce using rule 9 (statement -> conditionals .)
    ABSTRACT        reduce using rule 9 (statement -> conditionals .)
    SCRIBE          reduce using rule 9 (statement -> conditionals .)
    UNLOCK          reduce using rule 9 (statement -> conditionals .)
    LOCK            reduce using rule 9 (statement -> conditionals .)
    IF              reduce using rule 9 (statement -> conditionals .)
    FOR             reduce using rule 9 (statement -> conditionals .)
    ASLONGAS        reduce using rule 9 (statement -> conditionals .)
    ATTEMPT         reduce using rule 9 (statement -> conditionals .)
    $end            reduce using rule 9 (statement -> conditionals .)
    RBRACE          reduce using rule 9 (statement -> conditionals .)


state 11

    (10) statement -> attempt_findout_block .

    IDENTIFIER      reduce using rule 10 (statement -> attempt_findout_block .)
    HAIL            reduce using rule 10 (statement -> attempt_findout_block .)
    ABSTRACT        reduce using rule 10 (statement -> attempt_findout_block .)
    SCRIBE          reduce using rule 10 (statement -> attempt_findout_block .)
    UNLOCK          reduce using rule 10 (statement -> attempt_findout_block .)
    LOCK            reduce using rule 10 (statement -> attempt_findout_block .)
    IF              reduce using rule 10 (statement -> attempt_findout_block .)
    FOR             reduce using rule 10 (statement -> attempt_findout_block .)
    ASLONGAS        reduce using rule 10 (statement -> attempt_findout_block .)
    ATTEMPT         reduce using rule 10 (statement -> attempt_findout_block .)
    $end            reduce using rule 10 (statement -> attempt_findout_block .)
    RBRACE          reduce using rule 10 (statement -> attempt_findout_block .)


state 12

    (11) declaration -> mutex . type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> mutex . type IDENTIFIER LINEEND
    (129) type -> . INT_TYPE
    (130) type -> . FLOAT_TYPE
    (131) type -> . BOOL_TYPE
    (132) type -> . STRING_TYPE

    INT_TYPE        shift and go to state 29
    FLOAT_TYPE      shift and go to state 30
    BOOL_TYPE       shift and go to state 31
    STRING_TYPE     shift and go to state 32

    type                           shift and go to state 28

state 13

    (13) assignment -> IDENTIFIER . EQUAL expression LINEEND

    EQUAL           shift and go to state 33


state 14

    (14) abstract_call -> HAIL . FUNCTIONID LPAREN arguments RPAREN LINEEND

    FUNCTIONID      shift and go to state 34


state 15

    (15) abstract_function_declaration -> ABSTRACT . FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTIONID      shift and go to state 35


state 16

    (16) print_statement -> SCRIBE . LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> SCRIBE . LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> SCRIBE . LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> SCRIBE . LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND

    LPAREN          shift and go to state 36


state 17

    (20) conditionals -> if_statement .

    IDENTIFIER      reduce using rule 20 (conditionals -> if_statement .)
    HAIL            reduce using rule 20 (conditionals -> if_statement .)
    ABSTRACT        reduce using rule 20 (conditionals -> if_statement .)
    SCRIBE          reduce using rule 20 (conditionals -> if_statement .)
    UNLOCK          reduce using rule 20 (conditionals -> if_statement .)
    LOCK            reduce using rule 20 (conditionals -> if_statement .)
    IF              reduce using rule 20 (conditionals -> if_statement .)
    FOR             reduce using rule 20 (conditionals -> if_statement .)
    ASLONGAS        reduce using rule 20 (conditionals -> if_statement .)
    ATTEMPT         reduce using rule 20 (conditionals -> if_statement .)
    $end            reduce using rule 20 (conditionals -> if_statement .)
    RBRACE          reduce using rule 20 (conditionals -> if_statement .)


state 18

    (21) conditionals -> for_statement .

    IDENTIFIER      reduce using rule 21 (conditionals -> for_statement .)
    HAIL            reduce using rule 21 (conditionals -> for_statement .)
    ABSTRACT        reduce using rule 21 (conditionals -> for_statement .)
    SCRIBE          reduce using rule 21 (conditionals -> for_statement .)
    UNLOCK          reduce using rule 21 (conditionals -> for_statement .)
    LOCK            reduce using rule 21 (conditionals -> for_statement .)
    IF              reduce using rule 21 (conditionals -> for_statement .)
    FOR             reduce using rule 21 (conditionals -> for_statement .)
    ASLONGAS        reduce using rule 21 (conditionals -> for_statement .)
    ATTEMPT         reduce using rule 21 (conditionals -> for_statement .)
    $end            reduce using rule 21 (conditionals -> for_statement .)
    RBRACE          reduce using rule 21 (conditionals -> for_statement .)


state 19

    (22) conditionals -> aslongas_statement .

    IDENTIFIER      reduce using rule 22 (conditionals -> aslongas_statement .)
    HAIL            reduce using rule 22 (conditionals -> aslongas_statement .)
    ABSTRACT        reduce using rule 22 (conditionals -> aslongas_statement .)
    SCRIBE          reduce using rule 22 (conditionals -> aslongas_statement .)
    UNLOCK          reduce using rule 22 (conditionals -> aslongas_statement .)
    LOCK            reduce using rule 22 (conditionals -> aslongas_statement .)
    IF              reduce using rule 22 (conditionals -> aslongas_statement .)
    FOR             reduce using rule 22 (conditionals -> aslongas_statement .)
    ASLONGAS        reduce using rule 22 (conditionals -> aslongas_statement .)
    ATTEMPT         reduce using rule 22 (conditionals -> aslongas_statement .)
    $end            reduce using rule 22 (conditionals -> aslongas_statement .)
    RBRACE          reduce using rule 22 (conditionals -> aslongas_statement .)


state 20

    (58) attempt_findout_block -> attempt_block . findout_block
    (60) findout_block -> . FINDOUT error_type LBRACE statements RBRACE

    FINDOUT         shift and go to state 38

    findout_block                  shift and go to state 37

state 21

    (127) mutex -> UNLOCK .

    INT_TYPE        reduce using rule 127 (mutex -> UNLOCK .)
    FLOAT_TYPE      reduce using rule 127 (mutex -> UNLOCK .)
    BOOL_TYPE       reduce using rule 127 (mutex -> UNLOCK .)
    STRING_TYPE     reduce using rule 127 (mutex -> UNLOCK .)


state 22

    (128) mutex -> LOCK .

    INT_TYPE        reduce using rule 128 (mutex -> LOCK .)
    FLOAT_TYPE      reduce using rule 128 (mutex -> LOCK .)
    BOOL_TYPE       reduce using rule 128 (mutex -> LOCK .)
    STRING_TYPE     reduce using rule 128 (mutex -> LOCK .)


state 23

    (23) if_statement -> IF . expression LBRACE statements RBRACE
    (24) if_statement -> IF . expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> IF . expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> IF . expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 39

state 24

    (27) for_statement -> FOR . IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> FOR . IDENTIFIER IN iterables LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 50


state 25

    (31) aslongas_statement -> ASLONGAS . expression LBRACE statements RBRACE
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 51

state 26

    (59) attempt_block -> ATTEMPT . LBRACE statements RBRACE

    LBRACE          shift and go to state 52


state 27

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    RBRACE          reduce using rule 2 (statements -> statement statements .)


state 28

    (11) declaration -> mutex type . IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> mutex type . IDENTIFIER LINEEND

    IDENTIFIER      shift and go to state 53


state 29

    (129) type -> INT_TYPE .

    IDENTIFIER      reduce using rule 129 (type -> INT_TYPE .)


state 30

    (130) type -> FLOAT_TYPE .

    IDENTIFIER      reduce using rule 130 (type -> FLOAT_TYPE .)


state 31

    (131) type -> BOOL_TYPE .

    IDENTIFIER      reduce using rule 131 (type -> BOOL_TYPE .)


state 32

    (132) type -> STRING_TYPE .

    IDENTIFIER      reduce using rule 132 (type -> STRING_TYPE .)


state 33

    (13) assignment -> IDENTIFIER EQUAL . expression LINEEND
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 54

state 34

    (14) abstract_call -> HAIL FUNCTIONID . LPAREN arguments RPAREN LINEEND

    LPAREN          shift and go to state 55


state 35

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 56


state 36

    (16) print_statement -> SCRIBE LPAREN . STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> SCRIBE LPAREN . IDENTIFIER RPAREN LINEEND
    (18) print_statement -> SCRIBE LPAREN . IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> SCRIBE LPAREN . STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND

    STRING_LITERAL  shift and go to state 57
    IDENTIFIER      shift and go to state 58


state 37

    (58) attempt_findout_block -> attempt_block findout_block .

    IDENTIFIER      reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    HAIL            reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    ABSTRACT        reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    SCRIBE          reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    UNLOCK          reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    LOCK            reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    IF              reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    FOR             reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    ASLONGAS        reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    ATTEMPT         reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    $end            reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)
    RBRACE          reduce using rule 58 (attempt_findout_block -> attempt_block findout_block .)


state 38

    (60) findout_block -> FINDOUT . error_type LBRACE statements RBRACE
    (61) error_type -> . UNBOUNDLOCALERROR
    (62) error_type -> . TYPEERROR
    (63) error_type -> . VALUEERROR
    (64) error_type -> . INDEXERROR
    (65) error_type -> . KEYERROR
    (66) error_type -> . EXCEPTION
    (67) error_type -> . SYNTAXERROR
    (68) error_type -> . STOPITERATION
    (69) error_type -> . ARITHMETICERROR
    (70) error_type -> . FLOATINGPOINTERROR
    (71) error_type -> . OVERFLOWERROR
    (72) error_type -> . ZERODIVISIONERROR
    (73) error_type -> . ASSERTIONERROR
    (74) error_type -> . ATTRIBUTEERROR
    (75) error_type -> . BUFFERERROR
    (76) error_type -> . EOFERROR
    (77) error_type -> . IMPORTERROR
    (78) error_type -> . MODULENOTFOUNERROR
    (79) error_type -> . LOOKUPERROR
    (80) error_type -> . MEMORYERROR
    (81) error_type -> . NAMEERROR
    (82) error_type -> . BLOCKINGIOERROR
    (83) error_type -> . CHILDPROCESSERROR
    (84) error_type -> . CONNECTIONERROR
    (85) error_type -> . BROKENPIPEERROR
    (86) error_type -> . CONNECTIONABORTEDERROR
    (87) error_type -> . CONNECTIONREFUSEDERROR
    (88) error_type -> . CONNECTIONRESETERROR
    (89) error_type -> . FILEEXISTERROR
    (90) error_type -> . FILENOTFOUNERROR
    (91) error_type -> . INTERRUPTEDERROR
    (92) error_type -> . ISADIRECTORYERROR
    (93) error_type -> . NOTADIRECTORYERROR
    (94) error_type -> . PERMISSIONERROR
    (95) error_type -> . PROCESSLOOKUPERROR
    (96) error_type -> . TIMEOUTERROR
    (97) error_type -> . REFERENCEERROR
    (98) error_type -> . RUNTIMEERROR
    (99) error_type -> . INDENTATIONERROR
    (100) error_type -> . TABERROR
    (101) error_type -> . SYSTEMERROR
    (102) error_type -> . UNICODEERROR
    (103) error_type -> . UNICODEENCODEERROR
    (104) error_type -> . UNICODEDECODEERROR
    (105) error_type -> . UNICODETRANSLATEERROR
    (106) error_type -> . WARNING
    (107) error_type -> . USERWARNING
    (108) error_type -> . DEPRECATIONWARNING
    (109) error_type -> . PENDINGDEPRECATIONWARNING
    (110) error_type -> . SYNTAXWARNING
    (111) error_type -> . RUNTIMEWARNING
    (112) error_type -> . FUTUREWARNING
    (113) error_type -> . IMPORTWARNING
    (114) error_type -> . UNICODEWARNING
    (115) error_type -> . BYTESWARNING
    (116) error_type -> . RESOURCEWARNING
    (117) error_type -> . KEYBOARDINTERRUPT

    UNBOUNDLOCALERROR shift and go to state 60
    TYPEERROR       shift and go to state 61
    VALUEERROR      shift and go to state 62
    INDEXERROR      shift and go to state 63
    KEYERROR        shift and go to state 64
    EXCEPTION       shift and go to state 65
    SYNTAXERROR     shift and go to state 66
    STOPITERATION   shift and go to state 67
    ARITHMETICERROR shift and go to state 68
    FLOATINGPOINTERROR shift and go to state 69
    OVERFLOWERROR   shift and go to state 70
    ZERODIVISIONERROR shift and go to state 71
    ASSERTIONERROR  shift and go to state 72
    ATTRIBUTEERROR  shift and go to state 73
    BUFFERERROR     shift and go to state 74
    EOFERROR        shift and go to state 75
    IMPORTERROR     shift and go to state 76
    MODULENOTFOUNERROR shift and go to state 77
    LOOKUPERROR     shift and go to state 78
    MEMORYERROR     shift and go to state 79
    NAMEERROR       shift and go to state 80
    BLOCKINGIOERROR shift and go to state 81
    CHILDPROCESSERROR shift and go to state 82
    CONNECTIONERROR shift and go to state 83
    BROKENPIPEERROR shift and go to state 84
    CONNECTIONABORTEDERROR shift and go to state 85
    CONNECTIONREFUSEDERROR shift and go to state 86
    CONNECTIONRESETERROR shift and go to state 87
    FILEEXISTERROR  shift and go to state 88
    FILENOTFOUNERROR shift and go to state 89
    INTERRUPTEDERROR shift and go to state 90
    ISADIRECTORYERROR shift and go to state 91
    NOTADIRECTORYERROR shift and go to state 92
    PERMISSIONERROR shift and go to state 93
    PROCESSLOOKUPERROR shift and go to state 94
    TIMEOUTERROR    shift and go to state 95
    REFERENCEERROR  shift and go to state 96
    RUNTIMEERROR    shift and go to state 97
    INDENTATIONERROR shift and go to state 98
    TABERROR        shift and go to state 99
    SYSTEMERROR     shift and go to state 100
    UNICODEERROR    shift and go to state 101
    UNICODEENCODEERROR shift and go to state 102
    UNICODEDECODEERROR shift and go to state 103
    UNICODETRANSLATEERROR shift and go to state 104
    WARNING         shift and go to state 105
    USERWARNING     shift and go to state 106
    DEPRECATIONWARNING shift and go to state 107
    PENDINGDEPRECATIONWARNING shift and go to state 108
    SYNTAXWARNING   shift and go to state 109
    RUNTIMEWARNING  shift and go to state 110
    FUTUREWARNING   shift and go to state 111
    IMPORTWARNING   shift and go to state 112
    UNICODEWARNING  shift and go to state 113
    BYTESWARNING    shift and go to state 114
    RESOURCEWARNING shift and go to state 115
    KEYBOARDINTERRUPT shift and go to state 116

    error_type                     shift and go to state 59

state 39

    (23) if_statement -> IF expression . LBRACE statements RBRACE
    (24) if_statement -> IF expression . LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> IF expression . LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> IF expression . LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    LBRACE          shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 40

    (32) expression -> LPAREN . expression RPAREN
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 134

state 41

    (50) expression -> PLUS . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 135

state 42

    (51) expression -> MINUS . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 136

state 43

    (49) expression -> NOT . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 137

state 44

    (52) expression -> BITWISEINVERT . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 138

state 45

    (53) expression -> INTEGER .

    LBRACE          reduce using rule 53 (expression -> INTEGER .)
    PLUS            reduce using rule 53 (expression -> INTEGER .)
    MINUS           reduce using rule 53 (expression -> INTEGER .)
    TIMES           reduce using rule 53 (expression -> INTEGER .)
    DIVIDE          reduce using rule 53 (expression -> INTEGER .)
    POWER           reduce using rule 53 (expression -> INTEGER .)
    NOTEQUAL        reduce using rule 53 (expression -> INTEGER .)
    LESSTHAN        reduce using rule 53 (expression -> INTEGER .)
    GREATERTHAN     reduce using rule 53 (expression -> INTEGER .)
    LESSTHANOREQUAL reduce using rule 53 (expression -> INTEGER .)
    GREATERTHANOREQUAL reduce using rule 53 (expression -> INTEGER .)
    EQUIVALENT      reduce using rule 53 (expression -> INTEGER .)
    BITWISEAND      reduce using rule 53 (expression -> INTEGER .)
    BITWISEOR       reduce using rule 53 (expression -> INTEGER .)
    BITWISEXOR      reduce using rule 53 (expression -> INTEGER .)
    SHIFTLEFT       reduce using rule 53 (expression -> INTEGER .)
    SHIFTRIGHT      reduce using rule 53 (expression -> INTEGER .)
    LINEEND         reduce using rule 53 (expression -> INTEGER .)
    RPAREN          reduce using rule 53 (expression -> INTEGER .)
    COMMA           reduce using rule 53 (expression -> INTEGER .)


state 46

    (54) expression -> FLOAT .

    LBRACE          reduce using rule 54 (expression -> FLOAT .)
    PLUS            reduce using rule 54 (expression -> FLOAT .)
    MINUS           reduce using rule 54 (expression -> FLOAT .)
    TIMES           reduce using rule 54 (expression -> FLOAT .)
    DIVIDE          reduce using rule 54 (expression -> FLOAT .)
    POWER           reduce using rule 54 (expression -> FLOAT .)
    NOTEQUAL        reduce using rule 54 (expression -> FLOAT .)
    LESSTHAN        reduce using rule 54 (expression -> FLOAT .)
    GREATERTHAN     reduce using rule 54 (expression -> FLOAT .)
    LESSTHANOREQUAL reduce using rule 54 (expression -> FLOAT .)
    GREATERTHANOREQUAL reduce using rule 54 (expression -> FLOAT .)
    EQUIVALENT      reduce using rule 54 (expression -> FLOAT .)
    BITWISEAND      reduce using rule 54 (expression -> FLOAT .)
    BITWISEOR       reduce using rule 54 (expression -> FLOAT .)
    BITWISEXOR      reduce using rule 54 (expression -> FLOAT .)
    SHIFTLEFT       reduce using rule 54 (expression -> FLOAT .)
    SHIFTRIGHT      reduce using rule 54 (expression -> FLOAT .)
    LINEEND         reduce using rule 54 (expression -> FLOAT .)
    RPAREN          reduce using rule 54 (expression -> FLOAT .)
    COMMA           reduce using rule 54 (expression -> FLOAT .)


state 47

    (55) expression -> IDENTIFIER .

    LBRACE          reduce using rule 55 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 55 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 55 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 55 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 55 (expression -> IDENTIFIER .)
    POWER           reduce using rule 55 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 55 (expression -> IDENTIFIER .)
    LESSTHAN        reduce using rule 55 (expression -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 55 (expression -> IDENTIFIER .)
    LESSTHANOREQUAL reduce using rule 55 (expression -> IDENTIFIER .)
    GREATERTHANOREQUAL reduce using rule 55 (expression -> IDENTIFIER .)
    EQUIVALENT      reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEAND      reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEOR       reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEXOR      reduce using rule 55 (expression -> IDENTIFIER .)
    SHIFTLEFT       reduce using rule 55 (expression -> IDENTIFIER .)
    SHIFTRIGHT      reduce using rule 55 (expression -> IDENTIFIER .)
    LINEEND         reduce using rule 55 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 55 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 55 (expression -> IDENTIFIER .)


state 48

    (56) expression -> BOOLEAN .

    LBRACE          reduce using rule 56 (expression -> BOOLEAN .)
    PLUS            reduce using rule 56 (expression -> BOOLEAN .)
    MINUS           reduce using rule 56 (expression -> BOOLEAN .)
    TIMES           reduce using rule 56 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 56 (expression -> BOOLEAN .)
    POWER           reduce using rule 56 (expression -> BOOLEAN .)
    NOTEQUAL        reduce using rule 56 (expression -> BOOLEAN .)
    LESSTHAN        reduce using rule 56 (expression -> BOOLEAN .)
    GREATERTHAN     reduce using rule 56 (expression -> BOOLEAN .)
    LESSTHANOREQUAL reduce using rule 56 (expression -> BOOLEAN .)
    GREATERTHANOREQUAL reduce using rule 56 (expression -> BOOLEAN .)
    EQUIVALENT      reduce using rule 56 (expression -> BOOLEAN .)
    BITWISEAND      reduce using rule 56 (expression -> BOOLEAN .)
    BITWISEOR       reduce using rule 56 (expression -> BOOLEAN .)
    BITWISEXOR      reduce using rule 56 (expression -> BOOLEAN .)
    SHIFTLEFT       reduce using rule 56 (expression -> BOOLEAN .)
    SHIFTRIGHT      reduce using rule 56 (expression -> BOOLEAN .)
    LINEEND         reduce using rule 56 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 56 (expression -> BOOLEAN .)
    COMMA           reduce using rule 56 (expression -> BOOLEAN .)


state 49

    (57) expression -> STRING_LITERAL .

    LBRACE          reduce using rule 57 (expression -> STRING_LITERAL .)
    PLUS            reduce using rule 57 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 57 (expression -> STRING_LITERAL .)
    TIMES           reduce using rule 57 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 57 (expression -> STRING_LITERAL .)
    POWER           reduce using rule 57 (expression -> STRING_LITERAL .)
    NOTEQUAL        reduce using rule 57 (expression -> STRING_LITERAL .)
    LESSTHAN        reduce using rule 57 (expression -> STRING_LITERAL .)
    GREATERTHAN     reduce using rule 57 (expression -> STRING_LITERAL .)
    LESSTHANOREQUAL reduce using rule 57 (expression -> STRING_LITERAL .)
    GREATERTHANOREQUAL reduce using rule 57 (expression -> STRING_LITERAL .)
    EQUIVALENT      reduce using rule 57 (expression -> STRING_LITERAL .)
    BITWISEAND      reduce using rule 57 (expression -> STRING_LITERAL .)
    BITWISEOR       reduce using rule 57 (expression -> STRING_LITERAL .)
    BITWISEXOR      reduce using rule 57 (expression -> STRING_LITERAL .)
    SHIFTLEFT       reduce using rule 57 (expression -> STRING_LITERAL .)
    SHIFTRIGHT      reduce using rule 57 (expression -> STRING_LITERAL .)
    LINEEND         reduce using rule 57 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 57 (expression -> STRING_LITERAL .)
    COMMA           reduce using rule 57 (expression -> STRING_LITERAL .)


state 50

    (27) for_statement -> FOR IDENTIFIER . IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> FOR IDENTIFIER . IN iterables LBRACE statements RBRACE

    IN              shift and go to state 139


state 51

    (31) aslongas_statement -> ASLONGAS expression . LBRACE statements RBRACE
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    LBRACE          shift and go to state 140
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 52

    (59) attempt_block -> ATTEMPT LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 141
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 53

    (11) declaration -> mutex type IDENTIFIER . EQUAL expression LINEEND
    (12) declaration -> mutex type IDENTIFIER . LINEEND

    EQUAL           shift and go to state 142
    LINEEND         shift and go to state 143


state 54

    (13) assignment -> IDENTIFIER EQUAL expression . LINEEND
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    LINEEND         shift and go to state 144
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 55

    (14) abstract_call -> HAIL FUNCTIONID LPAREN . arguments RPAREN LINEEND
    (122) arguments -> . argument COMMA arguments
    (123) arguments -> . argument
    (124) arguments -> . empty
    (125) argument -> . IDENTIFIER
    (126) argument -> . expression
    (133) empty -> .
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 148
    RPAREN          reduce using rule 133 (empty -> .)
    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    arguments                      shift and go to state 145
    argument                       shift and go to state 146
    empty                          shift and go to state 147
    expression                     shift and go to state 149

state 56

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN . parameters RPAREN LBRACE statements RBRACE
    (119) parameters -> . parameter COMMA parameters
    (120) parameters -> . parameter
    (121) parameters -> . empty
    (118) parameter -> . type IDENTIFIER
    (133) empty -> .
    (129) type -> . INT_TYPE
    (130) type -> . FLOAT_TYPE
    (131) type -> . BOOL_TYPE
    (132) type -> . STRING_TYPE

    RPAREN          reduce using rule 133 (empty -> .)
    INT_TYPE        shift and go to state 29
    FLOAT_TYPE      shift and go to state 30
    BOOL_TYPE       shift and go to state 31
    STRING_TYPE     shift and go to state 32

    parameters                     shift and go to state 150
    parameter                      shift and go to state 151
    empty                          shift and go to state 152
    type                           shift and go to state 153

state 57

    (16) print_statement -> SCRIBE LPAREN STRING_LITERAL . RPAREN LINEEND
    (19) print_statement -> SCRIBE LPAREN STRING_LITERAL . COMMA IDENTIFIER RPAREN LINEEND

    RPAREN          shift and go to state 154
    COMMA           shift and go to state 155


state 58

    (17) print_statement -> SCRIBE LPAREN IDENTIFIER . RPAREN LINEEND
    (18) print_statement -> SCRIBE LPAREN IDENTIFIER . COMMA IDENTIFIER RPAREN LINEEND

    RPAREN          shift and go to state 156
    COMMA           shift and go to state 157


state 59

    (60) findout_block -> FINDOUT error_type . LBRACE statements RBRACE

    LBRACE          shift and go to state 158


state 60

    (61) error_type -> UNBOUNDLOCALERROR .

    LBRACE          reduce using rule 61 (error_type -> UNBOUNDLOCALERROR .)


state 61

    (62) error_type -> TYPEERROR .

    LBRACE          reduce using rule 62 (error_type -> TYPEERROR .)


state 62

    (63) error_type -> VALUEERROR .

    LBRACE          reduce using rule 63 (error_type -> VALUEERROR .)


state 63

    (64) error_type -> INDEXERROR .

    LBRACE          reduce using rule 64 (error_type -> INDEXERROR .)


state 64

    (65) error_type -> KEYERROR .

    LBRACE          reduce using rule 65 (error_type -> KEYERROR .)


state 65

    (66) error_type -> EXCEPTION .

    LBRACE          reduce using rule 66 (error_type -> EXCEPTION .)


state 66

    (67) error_type -> SYNTAXERROR .

    LBRACE          reduce using rule 67 (error_type -> SYNTAXERROR .)


state 67

    (68) error_type -> STOPITERATION .

    LBRACE          reduce using rule 68 (error_type -> STOPITERATION .)


state 68

    (69) error_type -> ARITHMETICERROR .

    LBRACE          reduce using rule 69 (error_type -> ARITHMETICERROR .)


state 69

    (70) error_type -> FLOATINGPOINTERROR .

    LBRACE          reduce using rule 70 (error_type -> FLOATINGPOINTERROR .)


state 70

    (71) error_type -> OVERFLOWERROR .

    LBRACE          reduce using rule 71 (error_type -> OVERFLOWERROR .)


state 71

    (72) error_type -> ZERODIVISIONERROR .

    LBRACE          reduce using rule 72 (error_type -> ZERODIVISIONERROR .)


state 72

    (73) error_type -> ASSERTIONERROR .

    LBRACE          reduce using rule 73 (error_type -> ASSERTIONERROR .)


state 73

    (74) error_type -> ATTRIBUTEERROR .

    LBRACE          reduce using rule 74 (error_type -> ATTRIBUTEERROR .)


state 74

    (75) error_type -> BUFFERERROR .

    LBRACE          reduce using rule 75 (error_type -> BUFFERERROR .)


state 75

    (76) error_type -> EOFERROR .

    LBRACE          reduce using rule 76 (error_type -> EOFERROR .)


state 76

    (77) error_type -> IMPORTERROR .

    LBRACE          reduce using rule 77 (error_type -> IMPORTERROR .)


state 77

    (78) error_type -> MODULENOTFOUNERROR .

    LBRACE          reduce using rule 78 (error_type -> MODULENOTFOUNERROR .)


state 78

    (79) error_type -> LOOKUPERROR .

    LBRACE          reduce using rule 79 (error_type -> LOOKUPERROR .)


state 79

    (80) error_type -> MEMORYERROR .

    LBRACE          reduce using rule 80 (error_type -> MEMORYERROR .)


state 80

    (81) error_type -> NAMEERROR .

    LBRACE          reduce using rule 81 (error_type -> NAMEERROR .)


state 81

    (82) error_type -> BLOCKINGIOERROR .

    LBRACE          reduce using rule 82 (error_type -> BLOCKINGIOERROR .)


state 82

    (83) error_type -> CHILDPROCESSERROR .

    LBRACE          reduce using rule 83 (error_type -> CHILDPROCESSERROR .)


state 83

    (84) error_type -> CONNECTIONERROR .

    LBRACE          reduce using rule 84 (error_type -> CONNECTIONERROR .)


state 84

    (85) error_type -> BROKENPIPEERROR .

    LBRACE          reduce using rule 85 (error_type -> BROKENPIPEERROR .)


state 85

    (86) error_type -> CONNECTIONABORTEDERROR .

    LBRACE          reduce using rule 86 (error_type -> CONNECTIONABORTEDERROR .)


state 86

    (87) error_type -> CONNECTIONREFUSEDERROR .

    LBRACE          reduce using rule 87 (error_type -> CONNECTIONREFUSEDERROR .)


state 87

    (88) error_type -> CONNECTIONRESETERROR .

    LBRACE          reduce using rule 88 (error_type -> CONNECTIONRESETERROR .)


state 88

    (89) error_type -> FILEEXISTERROR .

    LBRACE          reduce using rule 89 (error_type -> FILEEXISTERROR .)


state 89

    (90) error_type -> FILENOTFOUNERROR .

    LBRACE          reduce using rule 90 (error_type -> FILENOTFOUNERROR .)


state 90

    (91) error_type -> INTERRUPTEDERROR .

    LBRACE          reduce using rule 91 (error_type -> INTERRUPTEDERROR .)


state 91

    (92) error_type -> ISADIRECTORYERROR .

    LBRACE          reduce using rule 92 (error_type -> ISADIRECTORYERROR .)


state 92

    (93) error_type -> NOTADIRECTORYERROR .

    LBRACE          reduce using rule 93 (error_type -> NOTADIRECTORYERROR .)


state 93

    (94) error_type -> PERMISSIONERROR .

    LBRACE          reduce using rule 94 (error_type -> PERMISSIONERROR .)


state 94

    (95) error_type -> PROCESSLOOKUPERROR .

    LBRACE          reduce using rule 95 (error_type -> PROCESSLOOKUPERROR .)


state 95

    (96) error_type -> TIMEOUTERROR .

    LBRACE          reduce using rule 96 (error_type -> TIMEOUTERROR .)


state 96

    (97) error_type -> REFERENCEERROR .

    LBRACE          reduce using rule 97 (error_type -> REFERENCEERROR .)


state 97

    (98) error_type -> RUNTIMEERROR .

    LBRACE          reduce using rule 98 (error_type -> RUNTIMEERROR .)


state 98

    (99) error_type -> INDENTATIONERROR .

    LBRACE          reduce using rule 99 (error_type -> INDENTATIONERROR .)


state 99

    (100) error_type -> TABERROR .

    LBRACE          reduce using rule 100 (error_type -> TABERROR .)


state 100

    (101) error_type -> SYSTEMERROR .

    LBRACE          reduce using rule 101 (error_type -> SYSTEMERROR .)


state 101

    (102) error_type -> UNICODEERROR .

    LBRACE          reduce using rule 102 (error_type -> UNICODEERROR .)


state 102

    (103) error_type -> UNICODEENCODEERROR .

    LBRACE          reduce using rule 103 (error_type -> UNICODEENCODEERROR .)


state 103

    (104) error_type -> UNICODEDECODEERROR .

    LBRACE          reduce using rule 104 (error_type -> UNICODEDECODEERROR .)


state 104

    (105) error_type -> UNICODETRANSLATEERROR .

    LBRACE          reduce using rule 105 (error_type -> UNICODETRANSLATEERROR .)


state 105

    (106) error_type -> WARNING .

    LBRACE          reduce using rule 106 (error_type -> WARNING .)


state 106

    (107) error_type -> USERWARNING .

    LBRACE          reduce using rule 107 (error_type -> USERWARNING .)


state 107

    (108) error_type -> DEPRECATIONWARNING .

    LBRACE          reduce using rule 108 (error_type -> DEPRECATIONWARNING .)


state 108

    (109) error_type -> PENDINGDEPRECATIONWARNING .

    LBRACE          reduce using rule 109 (error_type -> PENDINGDEPRECATIONWARNING .)


state 109

    (110) error_type -> SYNTAXWARNING .

    LBRACE          reduce using rule 110 (error_type -> SYNTAXWARNING .)


state 110

    (111) error_type -> RUNTIMEWARNING .

    LBRACE          reduce using rule 111 (error_type -> RUNTIMEWARNING .)


state 111

    (112) error_type -> FUTUREWARNING .

    LBRACE          reduce using rule 112 (error_type -> FUTUREWARNING .)


state 112

    (113) error_type -> IMPORTWARNING .

    LBRACE          reduce using rule 113 (error_type -> IMPORTWARNING .)


state 113

    (114) error_type -> UNICODEWARNING .

    LBRACE          reduce using rule 114 (error_type -> UNICODEWARNING .)


state 114

    (115) error_type -> BYTESWARNING .

    LBRACE          reduce using rule 115 (error_type -> BYTESWARNING .)


state 115

    (116) error_type -> RESOURCEWARNING .

    LBRACE          reduce using rule 116 (error_type -> RESOURCEWARNING .)


state 116

    (117) error_type -> KEYBOARDINTERRUPT .

    LBRACE          reduce using rule 117 (error_type -> KEYBOARDINTERRUPT .)


state 117

    (23) if_statement -> IF expression LBRACE . statements RBRACE
    (24) if_statement -> IF expression LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> IF expression LBRACE . statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> IF expression LBRACE . statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 159
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 118

    (33) expression -> expression PLUS . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 160

state 119

    (34) expression -> expression MINUS . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 161

state 120

    (35) expression -> expression TIMES . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 162

state 121

    (36) expression -> expression DIVIDE . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 163

state 122

    (37) expression -> expression POWER . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 164

state 123

    (38) expression -> expression NOTEQUAL . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 165

state 124

    (39) expression -> expression LESSTHAN . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 166

state 125

    (40) expression -> expression GREATERTHAN . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 167

state 126

    (41) expression -> expression LESSTHANOREQUAL . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 168

state 127

    (42) expression -> expression GREATERTHANOREQUAL . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 169

state 128

    (43) expression -> expression EQUIVALENT . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 170

state 129

    (44) expression -> expression BITWISEAND . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 171

state 130

    (45) expression -> expression BITWISEOR . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 172

state 131

    (46) expression -> expression BITWISEXOR . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 173

state 132

    (47) expression -> expression SHIFTLEFT . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 174

state 133

    (48) expression -> expression SHIFTRIGHT . expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 175

state 134

    (32) expression -> LPAREN expression . RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    RPAREN          shift and go to state 176
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 135

    (50) expression -> PLUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 50 (expression -> PLUS expression .)
    LINEEND         reduce using rule 50 (expression -> PLUS expression .)
    RPAREN          reduce using rule 50 (expression -> PLUS expression .)
    COMMA           reduce using rule 50 (expression -> PLUS expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! POWER           [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! EQUIVALENT      [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! BITWISEAND      [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! BITWISEOR       [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! BITWISEXOR      [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 50 (expression -> PLUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 50 (expression -> PLUS expression .) ]


state 136

    (51) expression -> MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 51 (expression -> MINUS expression .)
    LINEEND         reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! POWER           [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! EQUIVALENT      [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! BITWISEAND      [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! BITWISEOR       [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! BITWISEXOR      [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 51 (expression -> MINUS expression .) ]


state 137

    (49) expression -> NOT expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 49 (expression -> NOT expression .)
    LINEEND         reduce using rule 49 (expression -> NOT expression .)
    RPAREN          reduce using rule 49 (expression -> NOT expression .)
    COMMA           reduce using rule 49 (expression -> NOT expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> NOT expression .) ]
  ! POWER           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! NOTEQUAL        [ reduce using rule 49 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 49 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 49 (expression -> NOT expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 49 (expression -> NOT expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 49 (expression -> NOT expression .) ]
  ! EQUIVALENT      [ reduce using rule 49 (expression -> NOT expression .) ]
  ! BITWISEAND      [ reduce using rule 49 (expression -> NOT expression .) ]
  ! BITWISEOR       [ reduce using rule 49 (expression -> NOT expression .) ]
  ! BITWISEXOR      [ reduce using rule 49 (expression -> NOT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 49 (expression -> NOT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 49 (expression -> NOT expression .) ]


state 138

    (52) expression -> BITWISEINVERT expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 52 (expression -> BITWISEINVERT expression .)
    LINEEND         reduce using rule 52 (expression -> BITWISEINVERT expression .)
    RPAREN          reduce using rule 52 (expression -> BITWISEINVERT expression .)
    COMMA           reduce using rule 52 (expression -> BITWISEINVERT expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! POWER           [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! NOTEQUAL        [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! LESSTHAN        [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! GREATERTHAN     [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! EQUIVALENT      [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! BITWISEAND      [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! BITWISEOR       [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! BITWISEXOR      [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 52 (expression -> BITWISEINVERT expression .) ]


state 139

    (27) for_statement -> FOR IDENTIFIER IN . RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> FOR IDENTIFIER IN . iterables LBRACE statements RBRACE
    (29) iterables -> . STRING_LITERAL
    (30) iterables -> . IDENTIFIER

    RANGE           shift and go to state 178
    STRING_LITERAL  shift and go to state 180
    IDENTIFIER      shift and go to state 177

    iterables                      shift and go to state 179

state 140

    (31) aslongas_statement -> ASLONGAS expression LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 181
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 141

    (59) attempt_block -> ATTEMPT LBRACE statements . RBRACE

    RBRACE          shift and go to state 182


state 142

    (11) declaration -> mutex type IDENTIFIER EQUAL . expression LINEEND
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 183

state 143

    (12) declaration -> mutex type IDENTIFIER LINEEND .

    IDENTIFIER      reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    HAIL            reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    ABSTRACT        reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    SCRIBE          reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    UNLOCK          reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    LOCK            reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    IF              reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    FOR             reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    ASLONGAS        reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    ATTEMPT         reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    $end            reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)
    RBRACE          reduce using rule 12 (declaration -> mutex type IDENTIFIER LINEEND .)


state 144

    (13) assignment -> IDENTIFIER EQUAL expression LINEEND .

    IDENTIFIER      reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    HAIL            reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    ABSTRACT        reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    SCRIBE          reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    UNLOCK          reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    LOCK            reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    IF              reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    FOR             reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    ASLONGAS        reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    ATTEMPT         reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    $end            reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)
    RBRACE          reduce using rule 13 (assignment -> IDENTIFIER EQUAL expression LINEEND .)


state 145

    (14) abstract_call -> HAIL FUNCTIONID LPAREN arguments . RPAREN LINEEND

    RPAREN          shift and go to state 184


state 146

    (122) arguments -> argument . COMMA arguments
    (123) arguments -> argument .

    COMMA           shift and go to state 185
    RPAREN          reduce using rule 123 (arguments -> argument .)


state 147

    (124) arguments -> empty .

    RPAREN          reduce using rule 124 (arguments -> empty .)


state 148

    (125) argument -> IDENTIFIER .
    (55) expression -> IDENTIFIER .

  ! reduce/reduce conflict for COMMA resolved using rule 55 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 55 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 55 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 55 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 55 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 55 (expression -> IDENTIFIER .)
    POWER           reduce using rule 55 (expression -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 55 (expression -> IDENTIFIER .)
    LESSTHAN        reduce using rule 55 (expression -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 55 (expression -> IDENTIFIER .)
    LESSTHANOREQUAL reduce using rule 55 (expression -> IDENTIFIER .)
    GREATERTHANOREQUAL reduce using rule 55 (expression -> IDENTIFIER .)
    EQUIVALENT      reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEAND      reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEOR       reduce using rule 55 (expression -> IDENTIFIER .)
    BITWISEXOR      reduce using rule 55 (expression -> IDENTIFIER .)
    SHIFTLEFT       reduce using rule 55 (expression -> IDENTIFIER .)
    SHIFTRIGHT      reduce using rule 55 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 55 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 55 (expression -> IDENTIFIER .)

  ! COMMA           [ reduce using rule 125 (argument -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 125 (argument -> IDENTIFIER .) ]


state 149

    (126) argument -> expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    COMMA           reduce using rule 126 (argument -> expression .)
    RPAREN          reduce using rule 126 (argument -> expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 150

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 186


state 151

    (119) parameters -> parameter . COMMA parameters
    (120) parameters -> parameter .

    COMMA           shift and go to state 187
    RPAREN          reduce using rule 120 (parameters -> parameter .)


state 152

    (121) parameters -> empty .

    RPAREN          reduce using rule 121 (parameters -> empty .)


state 153

    (118) parameter -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 188


state 154

    (16) print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN . LINEEND

    LINEEND         shift and go to state 189


state 155

    (19) print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA . IDENTIFIER RPAREN LINEEND

    IDENTIFIER      shift and go to state 190


state 156

    (17) print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN . LINEEND

    LINEEND         shift and go to state 191


state 157

    (18) print_statement -> SCRIBE LPAREN IDENTIFIER COMMA . IDENTIFIER RPAREN LINEEND

    IDENTIFIER      shift and go to state 192


state 158

    (60) findout_block -> FINDOUT error_type LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 193
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 159

    (23) if_statement -> IF expression LBRACE statements . RBRACE
    (24) if_statement -> IF expression LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> IF expression LBRACE statements . RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> IF expression LBRACE statements . RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RBRACE          shift and go to state 194


state 160

    (33) expression -> expression PLUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 33 (expression -> expression PLUS expression .)
    LINEEND         reduce using rule 33 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 33 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! EQUIVALENT      [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! BITWISEAND      [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! BITWISEOR       [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! BITWISEXOR      [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 33 (expression -> expression PLUS expression .) ]


state 161

    (34) expression -> expression MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 34 (expression -> expression MINUS expression .)
    LINEEND         reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! EQUIVALENT      [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! BITWISEAND      [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! BITWISEOR       [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! BITWISEXOR      [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 34 (expression -> expression MINUS expression .) ]


state 162

    (35) expression -> expression TIMES expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 35 (expression -> expression TIMES expression .)
    LINEEND         reduce using rule 35 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 35 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 35 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! NOTEQUAL        [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! LESSTHAN        [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! GREATERTHAN     [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! EQUIVALENT      [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! BITWISEAND      [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! BITWISEOR       [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! BITWISEXOR      [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! SHIFTLEFT       [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 35 (expression -> expression TIMES expression .) ]


state 163

    (36) expression -> expression DIVIDE expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    LINEEND         reduce using rule 36 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 36 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! NOTEQUAL        [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHAN     [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! EQUIVALENT      [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! BITWISEAND      [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! BITWISEOR       [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! BITWISEXOR      [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! SHIFTLEFT       [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]


state 164

    (37) expression -> expression POWER expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 37 (expression -> expression POWER expression .)
    LINEEND         reduce using rule 37 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 37 (expression -> expression POWER expression .)
    COMMA           reduce using rule 37 (expression -> expression POWER expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! NOTEQUAL        [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! LESSTHAN        [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! GREATERTHAN     [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! EQUIVALENT      [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! BITWISEAND      [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! BITWISEOR       [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! BITWISEXOR      [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! SHIFTLEFT       [ reduce using rule 37 (expression -> expression POWER expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 37 (expression -> expression POWER expression .) ]


state 165

    (38) expression -> expression NOTEQUAL expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 38 (expression -> expression NOTEQUAL expression .)
    LINEEND         reduce using rule 38 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 38 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! POWER           [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! EQUIVALENT      [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! BITWISEAND      [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! BITWISEOR       [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! BITWISEXOR      [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! SHIFTLEFT       [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 38 (expression -> expression NOTEQUAL expression .) ]


state 166

    (39) expression -> expression LESSTHAN expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 39 (expression -> expression LESSTHAN expression .)
    LINEEND         reduce using rule 39 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 39 (expression -> expression LESSTHAN expression .)
    COMMA           reduce using rule 39 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! POWER           [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! EQUIVALENT      [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! BITWISEAND      [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! BITWISEOR       [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! BITWISEXOR      [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! SHIFTLEFT       [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 39 (expression -> expression LESSTHAN expression .) ]


state 167

    (40) expression -> expression GREATERTHAN expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 40 (expression -> expression GREATERTHAN expression .)
    LINEEND         reduce using rule 40 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 40 (expression -> expression GREATERTHAN expression .)
    COMMA           reduce using rule 40 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! POWER           [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! EQUIVALENT      [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! BITWISEAND      [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! BITWISEOR       [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! BITWISEXOR      [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! SHIFTLEFT       [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 40 (expression -> expression GREATERTHAN expression .) ]


state 168

    (41) expression -> expression LESSTHANOREQUAL expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .)
    LINEEND         reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! POWER           [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! EQUIVALENT      [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! BITWISEAND      [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! BITWISEOR       [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! BITWISEXOR      [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! SHIFTLEFT       [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 41 (expression -> expression LESSTHANOREQUAL expression .) ]


state 169

    (42) expression -> expression GREATERTHANOREQUAL expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .)
    LINEEND         reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! POWER           [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! EQUIVALENT      [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! BITWISEAND      [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! BITWISEOR       [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! BITWISEXOR      [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! SHIFTLEFT       [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 42 (expression -> expression GREATERTHANOREQUAL expression .) ]


state 170

    (43) expression -> expression EQUIVALENT expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 43 (expression -> expression EQUIVALENT expression .)
    LINEEND         reduce using rule 43 (expression -> expression EQUIVALENT expression .)
    RPAREN          reduce using rule 43 (expression -> expression EQUIVALENT expression .)
    COMMA           reduce using rule 43 (expression -> expression EQUIVALENT expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! POWER           [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! NOTEQUAL        [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! LESSTHAN        [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! GREATERTHAN     [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! EQUIVALENT      [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! BITWISEAND      [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! BITWISEOR       [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! BITWISEXOR      [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 43 (expression -> expression EQUIVALENT expression .) ]


state 171

    (44) expression -> expression BITWISEAND expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 44 (expression -> expression BITWISEAND expression .)
    LINEEND         reduce using rule 44 (expression -> expression BITWISEAND expression .)
    RPAREN          reduce using rule 44 (expression -> expression BITWISEAND expression .)
    COMMA           reduce using rule 44 (expression -> expression BITWISEAND expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! POWER           [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! NOTEQUAL        [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! LESSTHAN        [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! GREATERTHAN     [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! EQUIVALENT      [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! BITWISEAND      [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! BITWISEOR       [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! BITWISEXOR      [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! SHIFTLEFT       [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 44 (expression -> expression BITWISEAND expression .) ]


state 172

    (45) expression -> expression BITWISEOR expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 45 (expression -> expression BITWISEOR expression .)
    LINEEND         reduce using rule 45 (expression -> expression BITWISEOR expression .)
    RPAREN          reduce using rule 45 (expression -> expression BITWISEOR expression .)
    COMMA           reduce using rule 45 (expression -> expression BITWISEOR expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! POWER           [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! NOTEQUAL        [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! LESSTHAN        [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! GREATERTHAN     [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! EQUIVALENT      [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! BITWISEAND      [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! BITWISEOR       [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! BITWISEXOR      [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 45 (expression -> expression BITWISEOR expression .) ]


state 173

    (46) expression -> expression BITWISEXOR expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 46 (expression -> expression BITWISEXOR expression .)
    LINEEND         reduce using rule 46 (expression -> expression BITWISEXOR expression .)
    RPAREN          reduce using rule 46 (expression -> expression BITWISEXOR expression .)
    COMMA           reduce using rule 46 (expression -> expression BITWISEXOR expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! POWER           [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! NOTEQUAL        [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! LESSTHAN        [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! GREATERTHAN     [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! EQUIVALENT      [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! BITWISEAND      [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! BITWISEOR       [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! BITWISEXOR      [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 46 (expression -> expression BITWISEXOR expression .) ]


state 174

    (47) expression -> expression SHIFTLEFT expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 47 (expression -> expression SHIFTLEFT expression .)
    LINEEND         reduce using rule 47 (expression -> expression SHIFTLEFT expression .)
    RPAREN          reduce using rule 47 (expression -> expression SHIFTLEFT expression .)
    COMMA           reduce using rule 47 (expression -> expression SHIFTLEFT expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! POWER           [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! NOTEQUAL        [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! LESSTHAN        [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! GREATERTHAN     [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! EQUIVALENT      [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! BITWISEAND      [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! BITWISEOR       [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! BITWISEXOR      [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 47 (expression -> expression SHIFTLEFT expression .) ]


state 175

    (48) expression -> expression SHIFTRIGHT expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUAL resolved as shift
  ! shift/reduce conflict for EQUIVALENT resolved as shift
  ! shift/reduce conflict for BITWISEAND resolved as shift
  ! shift/reduce conflict for BITWISEOR resolved as shift
  ! shift/reduce conflict for BITWISEXOR resolved as shift
  ! shift/reduce conflict for SHIFTLEFT resolved as shift
  ! shift/reduce conflict for SHIFTRIGHT resolved as shift
    LBRACE          reduce using rule 48 (expression -> expression SHIFTRIGHT expression .)
    LINEEND         reduce using rule 48 (expression -> expression SHIFTRIGHT expression .)
    RPAREN          reduce using rule 48 (expression -> expression SHIFTRIGHT expression .)
    COMMA           reduce using rule 48 (expression -> expression SHIFTRIGHT expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133

  ! PLUS            [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! POWER           [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! NOTEQUAL        [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! LESSTHAN        [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! GREATERTHAN     [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! LESSTHANOREQUAL [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! GREATERTHANOREQUAL [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! EQUIVALENT      [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! BITWISEAND      [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! BITWISEOR       [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! BITWISEXOR      [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 48 (expression -> expression SHIFTRIGHT expression .) ]


state 176

    (32) expression -> LPAREN expression RPAREN .

    LBRACE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESSTHANOREQUAL reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATERTHANOREQUAL reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQUIVALENT      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    BITWISEAND      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    BITWISEOR       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    BITWISEXOR      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SHIFTLEFT       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SHIFTRIGHT      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LINEEND         reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (expression -> LPAREN expression RPAREN .)


state 177

    (30) iterables -> IDENTIFIER .

    LBRACE          reduce using rule 30 (iterables -> IDENTIFIER .)


state 178

    (27) for_statement -> FOR IDENTIFIER IN RANGE . LPAREN arguments RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 195


state 179

    (28) for_statement -> FOR IDENTIFIER IN iterables . LBRACE statements RBRACE

    LBRACE          shift and go to state 196


state 180

    (29) iterables -> STRING_LITERAL .

    LBRACE          reduce using rule 29 (iterables -> STRING_LITERAL .)


state 181

    (31) aslongas_statement -> ASLONGAS expression LBRACE statements . RBRACE

    RBRACE          shift and go to state 197


state 182

    (59) attempt_block -> ATTEMPT LBRACE statements RBRACE .

    FINDOUT         reduce using rule 59 (attempt_block -> ATTEMPT LBRACE statements RBRACE .)


state 183

    (11) declaration -> mutex type IDENTIFIER EQUAL expression . LINEEND
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    LINEEND         shift and go to state 198
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 184

    (14) abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN . LINEEND

    LINEEND         shift and go to state 199


state 185

    (122) arguments -> argument COMMA . arguments
    (122) arguments -> . argument COMMA arguments
    (123) arguments -> . argument
    (124) arguments -> . empty
    (125) argument -> . IDENTIFIER
    (126) argument -> . expression
    (133) empty -> .
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 148
    RPAREN          reduce using rule 133 (empty -> .)
    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    argument                       shift and go to state 146
    arguments                      shift and go to state 200
    empty                          shift and go to state 147
    expression                     shift and go to state 149

state 186

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 201


state 187

    (119) parameters -> parameter COMMA . parameters
    (119) parameters -> . parameter COMMA parameters
    (120) parameters -> . parameter
    (121) parameters -> . empty
    (118) parameter -> . type IDENTIFIER
    (133) empty -> .
    (129) type -> . INT_TYPE
    (130) type -> . FLOAT_TYPE
    (131) type -> . BOOL_TYPE
    (132) type -> . STRING_TYPE

    RPAREN          reduce using rule 133 (empty -> .)
    INT_TYPE        shift and go to state 29
    FLOAT_TYPE      shift and go to state 30
    BOOL_TYPE       shift and go to state 31
    STRING_TYPE     shift and go to state 32

    parameter                      shift and go to state 151
    parameters                     shift and go to state 202
    empty                          shift and go to state 152
    type                           shift and go to state 153

state 188

    (118) parameter -> type IDENTIFIER .

    COMMA           reduce using rule 118 (parameter -> type IDENTIFIER .)
    RPAREN          reduce using rule 118 (parameter -> type IDENTIFIER .)


state 189

    (16) print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .

    IDENTIFIER      reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    HAIL            reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    ABSTRACT        reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    SCRIBE          reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    UNLOCK          reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    LOCK            reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    IF              reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    FOR             reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    ASLONGAS        reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    ATTEMPT         reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    $end            reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)
    RBRACE          reduce using rule 16 (print_statement -> SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND .)


state 190

    (19) print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER . RPAREN LINEEND

    RPAREN          shift and go to state 203


state 191

    (17) print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .

    IDENTIFIER      reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    HAIL            reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    ABSTRACT        reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    SCRIBE          reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    UNLOCK          reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    LOCK            reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    IF              reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    FOR             reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    ASLONGAS        reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    ATTEMPT         reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    $end            reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)
    RBRACE          reduce using rule 17 (print_statement -> SCRIBE LPAREN IDENTIFIER RPAREN LINEEND .)


state 192

    (18) print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER . RPAREN LINEEND

    RPAREN          shift and go to state 204


state 193

    (60) findout_block -> FINDOUT error_type LBRACE statements . RBRACE

    RBRACE          shift and go to state 205


state 194

    (23) if_statement -> IF expression LBRACE statements RBRACE .
    (24) if_statement -> IF expression LBRACE statements RBRACE . ELSE LBRACE statements RBRACE
    (25) if_statement -> IF expression LBRACE statements RBRACE . ELIF expression LBRACE statements RBRACE
    (26) if_statement -> IF expression LBRACE statements RBRACE . ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    IDENTIFIER      reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    HAIL            reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    LOCK            reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    IF              reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    FOR             reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    $end            reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    RBRACE          reduce using rule 23 (if_statement -> IF expression LBRACE statements RBRACE .)
    ELSE            shift and go to state 206
    ELIF            shift and go to state 207


state 195

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN . arguments RPAREN LBRACE statements RBRACE
    (122) arguments -> . argument COMMA arguments
    (123) arguments -> . argument
    (124) arguments -> . empty
    (125) argument -> . IDENTIFIER
    (126) argument -> . expression
    (133) empty -> .
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 148
    RPAREN          reduce using rule 133 (empty -> .)
    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    arguments                      shift and go to state 208
    argument                       shift and go to state 146
    empty                          shift and go to state 147
    expression                     shift and go to state 149

state 196

    (28) for_statement -> FOR IDENTIFIER IN iterables LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 209
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 197

    (31) aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    HAIL            reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    LOCK            reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    IF              reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    FOR             reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    $end            reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)
    RBRACE          reduce using rule 31 (aslongas_statement -> ASLONGAS expression LBRACE statements RBRACE .)


state 198

    (11) declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .

    IDENTIFIER      reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    HAIL            reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    ABSTRACT        reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    SCRIBE          reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    UNLOCK          reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    LOCK            reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    IF              reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    FOR             reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    ASLONGAS        reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    ATTEMPT         reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    $end            reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)
    RBRACE          reduce using rule 11 (declaration -> mutex type IDENTIFIER EQUAL expression LINEEND .)


state 199

    (14) abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .

    IDENTIFIER      reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    HAIL            reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    ABSTRACT        reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    SCRIBE          reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    UNLOCK          reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    LOCK            reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    IF              reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    FOR             reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    ASLONGAS        reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    ATTEMPT         reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    $end            reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)
    RBRACE          reduce using rule 14 (abstract_call -> HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND .)


state 200

    (122) arguments -> argument COMMA arguments .

    RPAREN          reduce using rule 122 (arguments -> argument COMMA arguments .)


state 201

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 210
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 202

    (119) parameters -> parameter COMMA parameters .

    RPAREN          reduce using rule 119 (parameters -> parameter COMMA parameters .)


state 203

    (19) print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN . LINEEND

    LINEEND         shift and go to state 211


state 204

    (18) print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN . LINEEND

    LINEEND         shift and go to state 212


state 205

    (60) findout_block -> FINDOUT error_type LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    HAIL            reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    LOCK            reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    IF              reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    FOR             reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    $end            reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)
    RBRACE          reduce using rule 60 (findout_block -> FINDOUT error_type LBRACE statements RBRACE .)


state 206

    (24) if_statement -> IF expression LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 213


state 207

    (25) if_statement -> IF expression LBRACE statements RBRACE ELIF . expression LBRACE statements RBRACE
    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF . expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression POWER expression
    (38) expression -> . expression NOTEQUAL expression
    (39) expression -> . expression LESSTHAN expression
    (40) expression -> . expression GREATERTHAN expression
    (41) expression -> . expression LESSTHANOREQUAL expression
    (42) expression -> . expression GREATERTHANOREQUAL expression
    (43) expression -> . expression EQUIVALENT expression
    (44) expression -> . expression BITWISEAND expression
    (45) expression -> . expression BITWISEOR expression
    (46) expression -> . expression BITWISEXOR expression
    (47) expression -> . expression SHIFTLEFT expression
    (48) expression -> . expression SHIFTRIGHT expression
    (49) expression -> . NOT expression
    (50) expression -> . PLUS expression
    (51) expression -> . MINUS expression
    (52) expression -> . BITWISEINVERT expression
    (53) expression -> . INTEGER
    (54) expression -> . FLOAT
    (55) expression -> . IDENTIFIER
    (56) expression -> . BOOLEAN
    (57) expression -> . STRING_LITERAL

    LPAREN          shift and go to state 40
    NOT             shift and go to state 43
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    BITWISEINVERT   shift and go to state 44
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 46
    IDENTIFIER      shift and go to state 47
    BOOLEAN         shift and go to state 48
    STRING_LITERAL  shift and go to state 49

    expression                     shift and go to state 214

state 208

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 215


state 209

    (28) for_statement -> FOR IDENTIFIER IN iterables LBRACE statements . RBRACE

    RBRACE          shift and go to state 216


state 210

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 217


state 211

    (19) print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .

    IDENTIFIER      reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    HAIL            reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    ABSTRACT        reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    SCRIBE          reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    UNLOCK          reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    LOCK            reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    IF              reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    FOR             reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    ASLONGAS        reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    ATTEMPT         reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    $end            reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)
    RBRACE          reduce using rule 19 (print_statement -> SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND .)


state 212

    (18) print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .

    IDENTIFIER      reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    HAIL            reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    ABSTRACT        reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    SCRIBE          reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    UNLOCK          reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    LOCK            reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    IF              reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    FOR             reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    ASLONGAS        reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    ATTEMPT         reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    $end            reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)
    RBRACE          reduce using rule 18 (print_statement -> SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND .)


state 213

    (24) if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 218
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 214

    (25) if_statement -> IF expression LBRACE statements RBRACE ELIF expression . LBRACE statements RBRACE
    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression . LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . POWER expression
    (38) expression -> expression . NOTEQUAL expression
    (39) expression -> expression . LESSTHAN expression
    (40) expression -> expression . GREATERTHAN expression
    (41) expression -> expression . LESSTHANOREQUAL expression
    (42) expression -> expression . GREATERTHANOREQUAL expression
    (43) expression -> expression . EQUIVALENT expression
    (44) expression -> expression . BITWISEAND expression
    (45) expression -> expression . BITWISEOR expression
    (46) expression -> expression . BITWISEXOR expression
    (47) expression -> expression . SHIFTLEFT expression
    (48) expression -> expression . SHIFTRIGHT expression

    LBRACE          shift and go to state 219
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    TIMES           shift and go to state 120
    DIVIDE          shift and go to state 121
    POWER           shift and go to state 122
    NOTEQUAL        shift and go to state 123
    LESSTHAN        shift and go to state 124
    GREATERTHAN     shift and go to state 125
    LESSTHANOREQUAL shift and go to state 126
    GREATERTHANOREQUAL shift and go to state 127
    EQUIVALENT      shift and go to state 128
    BITWISEAND      shift and go to state 129
    BITWISEOR       shift and go to state 130
    BITWISEXOR      shift and go to state 131
    SHIFTLEFT       shift and go to state 132
    SHIFTRIGHT      shift and go to state 133


state 215

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 220


state 216

    (28) for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    HAIL            reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    LOCK            reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    IF              reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    FOR             reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    $end            reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)
    RBRACE          reduce using rule 28 (for_statement -> FOR IDENTIFIER IN iterables LBRACE statements RBRACE .)


state 217

    (15) abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    HAIL            reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LOCK            reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 15 (abstract_function_declaration -> ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 218

    (24) if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 221


state 219

    (25) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE . statements RBRACE
    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 222
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 220

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 223
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 221

    (24) if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    HAIL            reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LOCK            reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 24 (if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 222

    (25) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements . RBRACE
    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements . RBRACE ELSE LBRACE statements RBRACE

    RBRACE          shift and go to state 224


state 223

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 225


state 224

    (25) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .
    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    IDENTIFIER      reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    HAIL            reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    LOCK            reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    IF              reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    FOR             reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    $end            reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    RBRACE          reduce using rule 25 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE .)
    ELSE            shift and go to state 226


state 225

    (27) for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    HAIL            reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    LOCK            reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 27 (for_statement -> FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE .)


state 226

    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 227


state 227

    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . declaration
    (5) statement -> . assignment
    (6) statement -> . abstract_call
    (7) statement -> . abstract_function_declaration
    (8) statement -> . print_statement
    (9) statement -> . conditionals
    (10) statement -> . attempt_findout_block
    (133) empty -> .
    (11) declaration -> . mutex type IDENTIFIER EQUAL expression LINEEND
    (12) declaration -> . mutex type IDENTIFIER LINEEND
    (13) assignment -> . IDENTIFIER EQUAL expression LINEEND
    (14) abstract_call -> . HAIL FUNCTIONID LPAREN arguments RPAREN LINEEND
    (15) abstract_function_declaration -> . ABSTRACT FUNCTIONID LPAREN parameters RPAREN LBRACE statements RBRACE
    (16) print_statement -> . SCRIBE LPAREN STRING_LITERAL RPAREN LINEEND
    (17) print_statement -> . SCRIBE LPAREN IDENTIFIER RPAREN LINEEND
    (18) print_statement -> . SCRIBE LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN LINEEND
    (19) print_statement -> . SCRIBE LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN LINEEND
    (20) conditionals -> . if_statement
    (21) conditionals -> . for_statement
    (22) conditionals -> . aslongas_statement
    (58) attempt_findout_block -> . attempt_block findout_block
    (127) mutex -> . UNLOCK
    (128) mutex -> . LOCK
    (23) if_statement -> . IF expression LBRACE statements RBRACE
    (24) if_statement -> . IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE
    (26) if_statement -> . IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (27) for_statement -> . FOR IDENTIFIER IN RANGE LPAREN arguments RPAREN LBRACE statements RBRACE
    (28) for_statement -> . FOR IDENTIFIER IN iterables LBRACE statements RBRACE
    (31) aslongas_statement -> . ASLONGAS expression LBRACE statements RBRACE
    (59) attempt_block -> . ATTEMPT LBRACE statements RBRACE

    RBRACE          reduce using rule 133 (empty -> .)
    IDENTIFIER      shift and go to state 13
    HAIL            shift and go to state 14
    ABSTRACT        shift and go to state 15
    SCRIBE          shift and go to state 16
    UNLOCK          shift and go to state 21
    LOCK            shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    ASLONGAS        shift and go to state 25
    ATTEMPT         shift and go to state 26

    statements                     shift and go to state 228
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6
    abstract_call                  shift and go to state 7
    abstract_function_declaration  shift and go to state 8
    print_statement                shift and go to state 9
    conditionals                   shift and go to state 10
    attempt_findout_block          shift and go to state 11
    mutex                          shift and go to state 12
    if_statement                   shift and go to state 17
    for_statement                  shift and go to state 18
    aslongas_statement             shift and go to state 19
    attempt_block                  shift and go to state 20

state 228

    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 229


state 229

    (26) if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    HAIL            reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ABSTRACT        reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SCRIBE          reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    UNLOCK          reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LOCK            reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ASLONGAS        reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ATTEMPT         reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 26 (if_statement -> IF expression LBRACE statements RBRACE ELIF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 135 resolved as shift
WARNING: shift/reduce conflict for POWER in state 135 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 135 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 135 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 135 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 135 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 135 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 135 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 135 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for POWER in state 136 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 136 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 136 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 136 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 136 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 136 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for POWER in state 137 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 137 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 137 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 137 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 137 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 137 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 138 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 138 resolved as shift
WARNING: shift/reduce conflict for POWER in state 138 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 138 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 138 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 138 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 138 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 138 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 138 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 138 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 160 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 160 resolved as shift
WARNING: shift/reduce conflict for POWER in state 160 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 160 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 160 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 160 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 160 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 160 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 161 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 161 resolved as shift
WARNING: shift/reduce conflict for POWER in state 161 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 161 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 161 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 161 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 161 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 161 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 161 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 161 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 162 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 162 resolved as shift
WARNING: shift/reduce conflict for POWER in state 162 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 162 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 162 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 162 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 162 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 162 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 162 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 162 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 162 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 163 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 163 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 163 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 163 resolved as shift
WARNING: shift/reduce conflict for POWER in state 163 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 163 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 163 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 163 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 163 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 163 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 163 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 163 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 163 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 164 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 164 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 164 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 164 resolved as shift
WARNING: shift/reduce conflict for POWER in state 164 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 164 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 164 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 164 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 164 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 164 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 164 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 164 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 164 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 164 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 164 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 165 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 165 resolved as shift
WARNING: shift/reduce conflict for POWER in state 165 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 165 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 165 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 165 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 165 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 165 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 165 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 165 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 165 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 166 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 166 resolved as shift
WARNING: shift/reduce conflict for POWER in state 166 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 166 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 166 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 166 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 166 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 166 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 166 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 166 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 166 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 166 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 166 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 167 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 167 resolved as shift
WARNING: shift/reduce conflict for POWER in state 167 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 167 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 167 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 167 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 167 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 167 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 167 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 167 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 168 resolved as shift
WARNING: shift/reduce conflict for POWER in state 168 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 168 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 168 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 168 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 168 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 168 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 168 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 168 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 169 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 169 resolved as shift
WARNING: shift/reduce conflict for POWER in state 169 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 169 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 169 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 169 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 169 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 169 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 169 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 169 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 169 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 170 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 170 resolved as shift
WARNING: shift/reduce conflict for POWER in state 170 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 170 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 170 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 170 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 170 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 170 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 170 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 170 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 171 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 171 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 171 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 171 resolved as shift
WARNING: shift/reduce conflict for POWER in state 171 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 171 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 171 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 171 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 171 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 171 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 171 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 171 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 171 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 172 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 172 resolved as shift
WARNING: shift/reduce conflict for POWER in state 172 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 172 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 172 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 172 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 172 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 172 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 172 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 172 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 173 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 173 resolved as shift
WARNING: shift/reduce conflict for POWER in state 173 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 173 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 173 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 173 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 173 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 173 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 173 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 173 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 174 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 174 resolved as shift
WARNING: shift/reduce conflict for POWER in state 174 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 174 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 174 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 174 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 174 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 174 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 174 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 174 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 175 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 175 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 175 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 175 resolved as shift
WARNING: shift/reduce conflict for POWER in state 175 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 175 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 175 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for EQUIVALENT in state 175 resolved as shift
WARNING: shift/reduce conflict for BITWISEAND in state 175 resolved as shift
WARNING: shift/reduce conflict for BITWISEOR in state 175 resolved as shift
WARNING: shift/reduce conflict for BITWISEXOR in state 175 resolved as shift
WARNING: shift/reduce conflict for SHIFTLEFT in state 175 resolved as shift
WARNING: shift/reduce conflict for SHIFTRIGHT in state 175 resolved as shift
WARNING: reduce/reduce conflict in state 148 resolved using rule (expression -> IDENTIFIER)
WARNING: rejected rule (argument -> IDENTIFIER) in state 148
WARNING: Rule (argument -> IDENTIFIER) is never reduced
